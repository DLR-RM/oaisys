# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import oaisys_pb2 as oaisys__pb2


class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/oaisys.Greeter/SayHello',
                request_serializer=oaisys__pb2.HelloRequest.SerializeToString,
                response_deserializer=oaisys__pb2.HelloReply.FromString,
                )
        self.SayHelloAgain = channel.unary_unary(
                '/oaisys.Greeter/SayHelloAgain',
                request_serializer=oaisys__pb2.HelloRequest.SerializeToString,
                response_deserializer=oaisys__pb2.HelloReply.FromString,
                )


class GreeterServicer(object):
    """The greeting service definition.
    """

    def SayHello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloAgain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=oaisys__pb2.HelloRequest.FromString,
                    response_serializer=oaisys__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloAgain': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloAgain,
                    request_deserializer=oaisys__pb2.HelloRequest.FromString,
                    response_serializer=oaisys__pb2.HelloReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'oaisys.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """The greeting service definition.
    """

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Greeter/SayHello',
            oaisys__pb2.HelloRequest.SerializeToString,
            oaisys__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloAgain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Greeter/SayHelloAgain',
            oaisys__pb2.HelloRequest.SerializeToString,
            oaisys__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OaisysStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StepSample = channel.unary_unary(
                '/oaisys.Oaisys/StepSample',
                request_serializer=oaisys__pb2.StepSampleRequest.SerializeToString,
                response_deserializer=oaisys__pb2.StepSampleReply.FromString,
                )
        self.StepBatch = channel.unary_unary(
                '/oaisys.Oaisys/StepBatch',
                request_serializer=oaisys__pb2.StepBatchRequest.SerializeToString,
                response_deserializer=oaisys__pb2.StepBatchReply.FromString,
                )
        self.RenderFinished = channel.unary_unary(
                '/oaisys.Oaisys/RenderFinished',
                request_serializer=oaisys__pb2.Empty.SerializeToString,
                response_deserializer=oaisys__pb2.RenderFinishedReply.FromString,
                )
        self.BatchCreationFinished = channel.unary_unary(
                '/oaisys.Oaisys/BatchCreationFinished',
                request_serializer=oaisys__pb2.Empty.SerializeToString,
                response_deserializer=oaisys__pb2.BatchCreationFinishedReply.FromString,
                )
        self.EndSimulation = channel.unary_unary(
                '/oaisys.Oaisys/EndSimulation',
                request_serializer=oaisys__pb2.Empty.SerializeToString,
                response_deserializer=oaisys__pb2.SuccessMsg.FromString,
                )


class OaisysServicer(object):
    """The greeting service definition.
    """

    def StepSample(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StepBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenderFinished(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreationFinished(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndSimulation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OaisysServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StepSample': grpc.unary_unary_rpc_method_handler(
                    servicer.StepSample,
                    request_deserializer=oaisys__pb2.StepSampleRequest.FromString,
                    response_serializer=oaisys__pb2.StepSampleReply.SerializeToString,
            ),
            'StepBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.StepBatch,
                    request_deserializer=oaisys__pb2.StepBatchRequest.FromString,
                    response_serializer=oaisys__pb2.StepBatchReply.SerializeToString,
            ),
            'RenderFinished': grpc.unary_unary_rpc_method_handler(
                    servicer.RenderFinished,
                    request_deserializer=oaisys__pb2.Empty.FromString,
                    response_serializer=oaisys__pb2.RenderFinishedReply.SerializeToString,
            ),
            'BatchCreationFinished': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreationFinished,
                    request_deserializer=oaisys__pb2.Empty.FromString,
                    response_serializer=oaisys__pb2.BatchCreationFinishedReply.SerializeToString,
            ),
            'EndSimulation': grpc.unary_unary_rpc_method_handler(
                    servicer.EndSimulation,
                    request_deserializer=oaisys__pb2.Empty.FromString,
                    response_serializer=oaisys__pb2.SuccessMsg.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'oaisys.Oaisys', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Oaisys(object):
    """The greeting service definition.
    """

    @staticmethod
    def StepSample(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Oaisys/StepSample',
            oaisys__pb2.StepSampleRequest.SerializeToString,
            oaisys__pb2.StepSampleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StepBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Oaisys/StepBatch',
            oaisys__pb2.StepBatchRequest.SerializeToString,
            oaisys__pb2.StepBatchReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenderFinished(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Oaisys/RenderFinished',
            oaisys__pb2.Empty.SerializeToString,
            oaisys__pb2.RenderFinishedReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreationFinished(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Oaisys/BatchCreationFinished',
            oaisys__pb2.Empty.SerializeToString,
            oaisys__pb2.BatchCreationFinishedReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndSimulation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oaisys.Oaisys/EndSimulation',
            oaisys__pb2.Empty.SerializeToString,
            oaisys__pb2.SuccessMsg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
